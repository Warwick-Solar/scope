Tutorial===================First, import all  nedeed libraries:.. code-block:: python    import numpy as np    import colorednoise as cn    import matplotlib.pyplot as plt    from scope.fourier import fit_fourier    from scope.emd import emd_modes, emd_trend, emd_energy_spectrum, emd_noise_conf    from scope.utils import plot_modes, plot_signal, plot_fft_spectrum, plot_emd_spectrum    The sample signal in this example consists of an oscillatory component, a decaying trend and some random noise signals obeying power law:.. image:: ../_static/input_signal.png    :align: center    After setting the mean of the signal to zero, we apply EMD to obtain the first set of intrinsic mode functions (IMFs):.. code-block:: python    modes = emd_modes(x, sd_thresh=1e-4)    plot_modes(t, modes)    where the 'sd_thresh' parameter is the threshold at which the sift of each IMF will stop... image:: ../_static/1st_EMD.png    :align: center    The trend of the signal is estimated using the 'emd_trend' function. This function identifies modes with periods exceeding a fraction of the total signal duration (denoted by the 'cutoff' parameter) and the residual as the trend of the signal. This cutoff is 0.4*signal length by default, which means that mode with less than 2.5 oscillations is considered as part of the trend... code-block:: python    modes = emd_trend(modes, t)    trend_emd = modes[:, -1]    plot_signal(t, trend_emd, 'Trend of the signal')    For this simple example, the trend of the signal is simply the residual of EMD:.. image:: ../_static/trend_signal.png    :align: center    Hence the detrended signal is:.. image:: ../_static/detrended_signal.png    :align: center    Now we can estimate the noise parameters of the actual part of the signal we are interested in, the detrended signal, by the 'fit_fourier' function. The function returns the noise parameters of coloured noise and white noise (if present). For this example, the FFT spectrum of the detrended signal shows a combination of white and coloured noise, with the power law index of this coloured noise being 1.61Â±0.49. The peak outside the 95% confidence level (false alarm probability = 0.05) is expected to be the period of the oscillatory signal... code-block:: python    fit_fft = fit_fourier(x, dt, fap=0.05)    plot_fft_spectrum(fit_fft)    .. image:: ../_static/FFT_spectrum.png    :align: center    The EMD energy spectrum is computed by the 'emd_energy_spectrum' function:.. code-block:: python    emd_sp = emd_energy_spectrum(modes, t, plot_fitting=True)    cutoff_period = 0.4 * len(x) * dt #show cutoff period    plot_emd_spectrum(emd_sp, cutoff_period)    .. image:: ../_static/emd_spectrum.png    :align: center    The dashed line corresponds to the cutoff period adopted in 'emd_trend' function, all modes beyond this line are considered as components of trend.With the power law index and noise energy returned by 'fit_fourier' function, we can compute the confidence limits of the EMD energy spectrum using 'emd_noise_conf' function:.. code-block:: python    # false alarm probability    fap = 0.05    #Confidence limits for coloured noise    conf_c = emd_noise_conf(t, alpha=alpha, period_min=2*dt,                             period_max=N*dt, num_samples=500,                             signal_energy=fit_fft['color_energy'], fap=fap)    #Confidence limits for white noise    if fit_fft['white_energy'] > 0: # check if there is only colored noise model        conf_w = emd_noise_conf(t, alpha=0, period_min=2*dt,                                period_max=N*dt, num_samples = 500,                                 signal_energy=fit_fft['white_energy'], fap=fap)                                Here the false alarm probability (fap) is set to 0.05. The 'emd_noise_conf' function generates 500 noise samples with the same power law index ('alpha') and energy ('signal_energy') as the input. The other two parameters 'period_min' and 'period_max' set the range of period over which the confidence limits will be computed. The EMD energy spectrum with confidence limits is given by:.. image:: ../_static/emd_spectrum_with_conf.png    :align: centerThe modes beyond the upper confidence limit are considered as significant modes that may not be considered as random noise.